pod:
  replicas:
    api: 1

# Make dependencies explicit so db-init doesn't wait on itself
dependencies:
  db_init:
    jobs: []    # <â€” important: no self-dependency
    services:
      - service: mariadb
        namespace: osh-infra

  db_sync:
    jobs:
      - keystone-db-init
    services:
      - service: mariadb
        namespace: osh-infra

endpoints:
  oslo_db:
    hosts: { default: mariadb }
    namespace: osh-infra
    scheme: mysql+pymysql
    port: { mysql: { default: 3306 } }
    auth:
      admin:    { username: root }
      keystone: { username: keystone }

  oslo_messaging:
    hosts: { default: osh-rabbitmq-rabbitmq }
    namespace: osh-infra
    port: { amqp: { default: 5672 } }
    auth:
      admin:    { username: rabbitmq }
      keystone: { username: keystone }

  oslo_cache:
    hosts: { default: osh-memcached-memcached }
    namespace: osh-infra
    port: { memcache: { default: 11211 } }

  identity:
    auth:
      admin:
        username: admin
        project_name: admin
        user_domain_name: Default
        project_domain_name: Default


# keep charts from creating Ingress objects (we'll use Cilium GatewayAPI later)

helm3_hook: false

images:
  tags:
    # utility images used by setup jobs (these default to Noble on master)
    ks_user:       docker.io/openstackhelm/heat:2024.2-ubuntu_jammy
    ks_endpoints:  docker.io/openstackhelm/heat:2024.2-ubuntu_jammy
    dep_check:     quay.io/airshipit/kubernetes-entrypoint:latest-ubuntu_jammy
    # (optional, but fine to pin too)
    keystone:      docker.io/openstackhelm/keystone:2024.2-ubuntu_jammy

manifests:
  ingress_api: false
  ingress_admin: false
  job_fernet_setup: true
  job_credential_setup: true
  job_db_sync: true
  job_bootstrap: true
  cron_fernet_rotate: true
  cron_credential_rotate: true

conf:
  keystone:
    token:
      provider: fernet
    fernet_tokens:
      key_repository: /etc/keystone/fernet-keys
    credential:
      key_repository: /etc/keystone/credential-keys

# optional: tiny resources for a small cluster; bump later if needed
resources:
  enabled: true
  pod:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi

