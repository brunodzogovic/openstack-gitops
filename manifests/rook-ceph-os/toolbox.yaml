apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-ceph-tools
  namespace: rook-ceph
  labels: { app: rook-ceph-tools }
spec:
  replicas: 1
  selector:
    matchLabels: { app: rook-ceph-tools }
  template:
    metadata:
      labels: { app: rook-ceph-tools }
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: rook-ceph-tools
          image: docker.io/rook/ceph:v1.15.7   # <-- valid tag; no "tool-"
          imagePullPolicy: IfNotPresent
          command: ["/tini"]                   # <-- tini exists in rook/ceph
          args: ["-g","--","/usr/local/bin/toolbox.sh"]  # <-- toolbox.sh exists
          securityContext:
            privileged: true
          env:
            - name: ROOK_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: rook-ceph-mon
                  key: admin-secret
          volumeMounts:
            - { name: dev,  mountPath: /dev }
            - { name: sysbus, mountPath: /sys/bus }
            - { name: libmodules, mountPath: /lib/modules }
            - { name: mon-endpoint-volume, mountPath: /etc/rook }
      volumes:
        - name: dev         ; hostPath: { path: /dev }
        - name: sysbus      ; hostPath: { path: /sys/bus }
        - name: libmodules  ; hostPath: { path: /lib/modules }
        - name: mon-endpoint-volume
          configMap:
            name: rook-ceph-mon-endpoints
            items: [{ key: data, path: mon-endpoints }]
