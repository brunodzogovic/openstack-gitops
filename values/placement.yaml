helm3_hook: false   # let Argo drive hooks instead of Helm hooks

pod:
  replicas:
    api: 1

manifests:
  ingress_api: false
  ingress: false
  secret_rabbitmq: true   # placement can send notifications; harmless to keep

dependencies:
  db_init:
    services:
      - service: mariadb
        namespace: osh-infra
  db_sync:
    jobs:
      - placement-db-init
    services:
      - service: mariadb
        namespace: osh-infra

endpoints:
  # DB in osh-infra
  oslo_db:
    hosts: { default: mariadb }
    namespace: osh-infra
    scheme: mysql+pymysql
    port: { mysql: { default: 3306 } }
    auth:
      admin:   { username: root }       # password from secrets.sops.yaml
      placement: { username: placement }# password from secrets.sops.yaml

  # Keystone it talks to (your internal keystone service)
  identity:
    hosts: { default: keystone-api }
    namespace: openstack
    port: { api: { default: 5000 } }
    path: { default: /v3 }
    scheme: http
    auth:
      # service user Placement uses to call Keystone
      placement:
        username: placement
        project_name: service
        user_domain_name: Default
        project_domain_name: Default
      admin:
        username: admin
        project_name: admin
        user_domain_name: Default
        project_domain_name: Default

  # Oslo messaging (matches your RabbitMQ setup)
  oslo_messaging:
    host_fqdn_overrides:
      default: rabbitmq.osh-infra.svc.cluster.local
    hosts: { default: rabbitmq }
    namespace: osh-infra
    scheme: { default: rabbit }
    port: { amqp: { default: 5672 } }
    path: { default: /placement }
    auth:
      admin:    { username: rabbitmq }   # password from secrets.sops.yaml
      placement:{ username: placement }  # password from secrets.sops.yaml

  # Cache (memcached)
  oslo_cache:
    hosts: { default: memcached }   # <-- you fixed naming earlier; keep it
    namespace: osh-infra
    port: { memcache: { default: 11211 } }

# (Optional) make API service NodePort/ClusterIP etc; default ClusterIP is fine
network:
  api:
    external_policy_local: false

