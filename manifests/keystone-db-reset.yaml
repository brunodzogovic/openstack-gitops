apiVersion: batch/v1
kind: Job
metadata:
  name: keystone-db-password-fix
  namespace: openstack
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded,BeforeHookCreation
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: fix
        image: mysql:8.0
        command: ["/bin/sh","-lc"]
        env:
          # produced by the keystone chart
          - name: ADMIN_URL
            valueFrom:
              secretKeyRef:
                name: keystone-db-admin
                key: DB_CONNECTION
          - name: USER_URL
            valueFrom:
              secretKeyRef:
                name: keystone-db-user
                key: DB_CONNECTION
        args:
          - |
            set -euo pipefail

            # urls look like:  mysql+pymysql://user:pass@host:3306/db
            host=$(printf "%s\n" "$ADMIN_URL" | sed -E 's#.*@([^:/]+).*#\1#')
            admin_pass=$(printf "%s\n" "$ADMIN_URL" | sed -E 's#^[^:]+://[^:]+:([^@]+)@.*#\1#')
            user_pass=$(printf "%s\n" "$USER_URL"  | sed -E 's#^[^:]+://[^:]+:([^@]+)@.*#\1#')

            # align DB user password to what the chart wants
            mysql -h "$host" -uroot -p"$admin_pass" -e "
              CREATE DATABASE IF NOT EXISTS keystone;
              CREATE USER IF NOT EXISTS 'keystone'@'%' IDENTIFIED BY '${user_pass}';
              ALTER  USER 'keystone'@'%' IDENTIFIED BY '${user_pass}';
              GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%';
              FLUSH PRIVILEGES;"
